


## This is an example config file from ServiceStack. It's not currently being used.





#######################################################################
#
# This is the main Nginx configuration file.  
#
# More information about the configuration options is available on 
#   * the English wiki - http://wiki.codemongers.com/Main
#   * the Russian documentation - http://sysoev.ru/nginx/
#
#######################################################################

#----------------------------------------------------------------------
# Main Module - directives that cover basic functionality
#
#   http://wiki.codemongers.com/NginxMainModule
#
#----------------------------------------------------------------------

user              nginx;
worker_processes  1;

error_log         /var/log/nginx/error.log;
#error_log        /var/log/nginx/error.log  notice;
#error_log        /var/log/nginx/error.log  info;

pid               /var/run/nginx.pid;



#----------------------------------------------------------------------
# Events Module 
#
#   http://wiki.codemongers.com/NginxEventsModule
#
#----------------------------------------------------------------------

events {
    worker_connections  1024;
}


#----------------------------------------------------------------------
# HTTP Core Module
#
#   http://wiki.codemongers.com/NginxHttpCoreModule 
#
#----------------------------------------------------------------------

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] $request '
                      '"$status" $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
    
    # Load config files from the /etc/nginx/conf.d directory
    include /etc/nginx/conf.d/*.conf;

    #
    # The default server
    #
    server {
        listen       62.212.66.207:80;
        listen       127.0.0.1:80;
        server_name  _ *.servicestack.net *.ajaxstack.com *.freelamusica.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location /html/ {
            root   /usr/share/nginx/html;
  	    index index.html index.htm index.aspx default.htm Default.htm default.aspx Default.aspx Default.ashx;  
        }


# For requests starting with a tilde, break them into three components:
# 1. The username, everything after the tilde up to the first slash
# 2. The file location, everything after the username up to the last slash
# 3. The trailing slash(es)
# Then, rewrite to go to the f~/ branch.
location /~ {
    if ($request_uri ~ ^/~([^/]*)(/.*[^/]|)(/*)$) {
        set $homedir $1;
        set $filedir $2;
        set $trailingslashes $3;
        rewrite ^/~([^/]*)(/|$)(.*)$ f~/$3;
    }
}
 
# Here, the user-directory components have been parsed. Use an alias to set
# the file directory prefix. But if the file at the requested URI is a
# directory, we jump to the ~/ branch for additional processing.
location f~/ {
    alias /home/$homedir/public_html/;
    if (-d /home/$homedir/public_html$filedir) {
        rewrite ^f~/(.*) ~/$1;
    }
}
 
# Here, the request is for a directory in a user's home directory. We check
# that the request URI contained trailing slashes. If it did not, then we
# add the slashes and send a redirect. This circumvents Nginx's faulty
# internal slash-adding mechanism.
location ~/ {
    autoindex on;
    alias /home/$homedir/public_html/;
    if ($trailingslashes = "") {
        rewrite .* /~$homedir$filedir/ redirect;
    }
}


if ($host ~* (www\.)?(almost-free.co.uk|almost-free.net|bacheloripad.com|ip.*)) {
  set $host_without_www $1;
  rewrite ^(.*)$ http://www.ipockettranslator.com permanent; 
}

        #proxy the PHP scripts to Apache listening on 127.0.0.1:81
        
        #location ~ \.php$ {
        location /mythz_blog {
            proxy_pass   http://62.212.66.238:80;
            proxy_redirect     off;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location ~ \.(aspx|asmx|ashx|asax|ascx|soap|rem|axd|cs|config|dll)$ {
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
	    include /etc/nginx/fastcgi_params;  
        }

	location ~ /(ServiceStack|RemoteInfo|RedisWebServices|RedisAdminUI|RedisStackOverflow|RestFiles|CustomPath|RootPath|ApiPath|Backbone|docs|ftweetstack)\.* {  
		root /usr/share/nginx/mono/servicestack.net/;  
	    	index index.html index.htm index.aspx default.htm Default.htm default.aspx Default.aspx Default.ashx;  
		fastcgi_index /default.htm;
		fastcgi_pass  127.0.0.1:9000;  
		fastcgi_param SCRIPT_FILENAME /usr/share/nginx/mono/servicestack.net$fastcgi_script_name;  
		include /etc/nginx/fastcgi_params;  
	}

        location ~ /AjaxStack\.* {
            root   /usr/share/nginx/html/$host/;
            index index.html index.htm index.aspx default.htm default.aspx index.ashx Default.ashx;
	}

        location ~ /AjaxStack\.* {
                root /usr/share/nginx/mono/ajaxstack.com/;
	    	index index.html index.htm index.aspx default.htm Default.htm default.aspx Default.aspx Default.ashx;  
                fastcgi_index Default.aspx;
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_param SCRIPT_FILENAME /usr/share/nginx/mono/ajaxstack.com$fastcgi_script_name;
                include /etc/nginx/fastcgi_params;
        }

#        location ~ /FreeLaMusica\.* {
#            root   /usr/share/nginx/html/freelamusica.com/;
#            index index.html index.htm index.aspx default.htm default.aspx index.ashx Default.ashx;
#	}

        location ~ /FreeLaMusica\.* {
                root /usr/share/nginx/mono/freelamusica.com/;
	    	index index.html index.htm index.aspx default.htm Default.htm default.aspx Default.aspx Default.ashx;  
                fastcgi_index Default.aspx;
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_param SCRIPT_FILENAME /usr/share/nginx/mono/freelamusica.com$fastcgi_script_name;
                include /etc/nginx/fastcgi_params;
        }

        location / {
            root   /usr/share/nginx/html/$host/;
	    index index.html index.htm index.aspx default.htm Default.htm default.aspx Default.aspx Default.ashx;  
        }

        #error_page  404              /usr/share/nginx/html/servicestack.net/default.htm;
        error_page  404              /404.html;
        location = /404.html {
            root   /usr/share/nginx/html;
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    } 
}
